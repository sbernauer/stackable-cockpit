#compdef stackctl

autoload -U is-at-least

_stackctl() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-l+[Log level this application uses]:LOG_LEVEL:(error warn info debug trace)' \
'--log-level=[Log level this application uses]:LOG_LEVEL:(error warn info debug trace)' \
'-n+[Namespace in the cluster used to deploy the products and operators]:NAMESPACE: ' \
'--namespace=[Namespace in the cluster used to deploy the products and operators]:NAMESPACE: ' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_stackctl_commands" \
"*::: :->stackctl" \
&& ret=0
    case $state in
    (stackctl)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:stackctl-command-$line[1]:"
        case $line[1] in
            (operator)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_stackctl__operator_commands" \
"*::: :->operator" \
&& ret=0

    case $state in
    (operator)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:stackctl-operator-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-o+[]:OUTPUT_TYPE:((plain\:"Print output formatted as plain text"
json\:"Print output formatted as JSON"
yaml\:"Print output formatted as YAML"))' \
'--output=[]:OUTPUT_TYPE:((plain\:"Print output formatted as plain text"
json\:"Print output formatted as JSON"
yaml\:"Print output formatted as YAML"))' \
'-i[List only installed operators]' \
'--installed[List only installed operators]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(describe)
_arguments "${_arguments_options[@]}" \
'-o+[]:OUTPUT_TYPE:((plain\:"Print output formatted as plain text"
json\:"Print output formatted as JSON"
yaml\:"Print output formatted as YAML"))' \
'--output=[]:OUTPUT_TYPE:((plain\:"Print output formatted as plain text"
json\:"Print output formatted as JSON"
yaml\:"Print output formatted as YAML"))' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
':OPERATOR -- Operator to describe:' \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" \
'-c+[Type of local cluster to use for testing]:CLUSTER_TYPE:((kind\:"Use a kind cluster, see <https://docs.stackable.tech/home/getting_started.html#_installing_kubernetes_using_kind>"
minikube\:"Use a minikube cluster (CURRENTLY UNSUPPORTED)"))' \
'--cluster=[Type of local cluster to use for testing]:CLUSTER_TYPE:((kind\:"Use a kind cluster, see <https://docs.stackable.tech/home/getting_started.html#_installing_kubernetes_using_kind>"
minikube\:"Use a minikube cluster (CURRENTLY UNSUPPORTED)"))' \
'--cluster-name=[Name of the local cluster]:CLUSTER_NAME: ' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
'*::OPERATORS -- Operator(s) to install:' \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'*::operators -- One or more operators to uninstall:' \
&& ret=0
;;
(installed)
_arguments "${_arguments_options[@]}" \
'-o+[]:OUTPUT_TYPE:((plain\:"Print output formatted as plain text"
json\:"Print output formatted as JSON"
yaml\:"Print output formatted as YAML"))' \
'--output=[]:OUTPUT_TYPE:((plain\:"Print output formatted as plain text"
json\:"Print output formatted as JSON"
yaml\:"Print output formatted as YAML"))' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_stackctl__operator__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:stackctl-operator-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(describe)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(installed)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(release)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_stackctl__release_commands" \
"*::: :->release" \
&& ret=0

    case $state in
    (release)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:stackctl-release-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-o+[]:OUTPUT_TYPE:((plain\:"Print output formatted as plain text"
json\:"Print output formatted as JSON"
yaml\:"Print output formatted as YAML"))' \
'--output=[]:OUTPUT_TYPE:((plain\:"Print output formatted as plain text"
json\:"Print output formatted as JSON"
yaml\:"Print output formatted as YAML"))' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(describe)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_stackctl__release__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:stackctl-release-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(describe)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(stack)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(services)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(demos)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_stackctl__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:stackctl-help-command-$line[1]:"
        case $line[1] in
            (operator)
_arguments "${_arguments_options[@]}" \
":: :_stackctl__help__operator_commands" \
"*::: :->operator" \
&& ret=0

    case $state in
    (operator)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:stackctl-help-operator-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(describe)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(installed)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(release)
_arguments "${_arguments_options[@]}" \
":: :_stackctl__help__release_commands" \
"*::: :->release" \
&& ret=0

    case $state in
    (release)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:stackctl-help-release-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(describe)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(stack)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(services)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(demos)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_stackctl_commands] )) ||
_stackctl_commands() {
    local commands; commands=(
'operator:Interact with single operator instead of the full platform' \
'release:Interact with all operators of the platform which are released together' \
'stack:Interact with stacks, which are ready-to-use product combinations' \
'services:Interact with deployed services of products' \
'demos:Interact with demos, which are end-to-end usage demonstrations of the Stackable data platform' \
'completions:Generate shell completions for this tool' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'stackctl commands' commands "$@"
}
(( $+functions[_stackctl__completions_commands] )) ||
_stackctl__completions_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl completions commands' commands "$@"
}
(( $+functions[_stackctl__help__completions_commands] )) ||
_stackctl__help__completions_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help completions commands' commands "$@"
}
(( $+functions[_stackctl__demos_commands] )) ||
_stackctl__demos_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl demos commands' commands "$@"
}
(( $+functions[_stackctl__help__demos_commands] )) ||
_stackctl__help__demos_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help demos commands' commands "$@"
}
(( $+functions[_stackctl__help__operator__describe_commands] )) ||
_stackctl__help__operator__describe_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help operator describe commands' commands "$@"
}
(( $+functions[_stackctl__help__release__describe_commands] )) ||
_stackctl__help__release__describe_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help release describe commands' commands "$@"
}
(( $+functions[_stackctl__operator__describe_commands] )) ||
_stackctl__operator__describe_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator describe commands' commands "$@"
}
(( $+functions[_stackctl__operator__help__describe_commands] )) ||
_stackctl__operator__help__describe_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator help describe commands' commands "$@"
}
(( $+functions[_stackctl__release__describe_commands] )) ||
_stackctl__release__describe_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release describe commands' commands "$@"
}
(( $+functions[_stackctl__release__help__describe_commands] )) ||
_stackctl__release__help__describe_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release help describe commands' commands "$@"
}
(( $+functions[_stackctl__help_commands] )) ||
_stackctl__help_commands() {
    local commands; commands=(
'operator:Interact with single operator instead of the full platform' \
'release:Interact with all operators of the platform which are released together' \
'stack:Interact with stacks, which are ready-to-use product combinations' \
'services:Interact with deployed services of products' \
'demos:Interact with demos, which are end-to-end usage demonstrations of the Stackable data platform' \
'completions:Generate shell completions for this tool' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'stackctl help commands' commands "$@"
}
(( $+functions[_stackctl__help__help_commands] )) ||
_stackctl__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help help commands' commands "$@"
}
(( $+functions[_stackctl__operator__help_commands] )) ||
_stackctl__operator__help_commands() {
    local commands; commands=(
'list:List available (or installed) operators' \
'describe:Print out detailed operator information' \
'install:Install one or more operators' \
'uninstall:Uninstall one or more operators' \
'installed:List installed operator (same as list -i)' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'stackctl operator help commands' commands "$@"
}
(( $+functions[_stackctl__operator__help__help_commands] )) ||
_stackctl__operator__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator help help commands' commands "$@"
}
(( $+functions[_stackctl__release__help_commands] )) ||
_stackctl__release__help_commands() {
    local commands; commands=(
'list:List available releases' \
'describe:Print out detailed release information' \
'install:Install a specific release' \
'uninstall:Uninstall a release' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'stackctl release help commands' commands "$@"
}
(( $+functions[_stackctl__release__help__help_commands] )) ||
_stackctl__release__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release help help commands' commands "$@"
}
(( $+functions[_stackctl__help__operator__install_commands] )) ||
_stackctl__help__operator__install_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help operator install commands' commands "$@"
}
(( $+functions[_stackctl__help__release__install_commands] )) ||
_stackctl__help__release__install_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help release install commands' commands "$@"
}
(( $+functions[_stackctl__operator__help__install_commands] )) ||
_stackctl__operator__help__install_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator help install commands' commands "$@"
}
(( $+functions[_stackctl__operator__install_commands] )) ||
_stackctl__operator__install_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator install commands' commands "$@"
}
(( $+functions[_stackctl__release__help__install_commands] )) ||
_stackctl__release__help__install_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release help install commands' commands "$@"
}
(( $+functions[_stackctl__release__install_commands] )) ||
_stackctl__release__install_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release install commands' commands "$@"
}
(( $+functions[_stackctl__help__operator__installed_commands] )) ||
_stackctl__help__operator__installed_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help operator installed commands' commands "$@"
}
(( $+functions[_stackctl__operator__help__installed_commands] )) ||
_stackctl__operator__help__installed_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator help installed commands' commands "$@"
}
(( $+functions[_stackctl__operator__installed_commands] )) ||
_stackctl__operator__installed_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator installed commands' commands "$@"
}
(( $+functions[_stackctl__help__operator__list_commands] )) ||
_stackctl__help__operator__list_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help operator list commands' commands "$@"
}
(( $+functions[_stackctl__help__release__list_commands] )) ||
_stackctl__help__release__list_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help release list commands' commands "$@"
}
(( $+functions[_stackctl__operator__help__list_commands] )) ||
_stackctl__operator__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator help list commands' commands "$@"
}
(( $+functions[_stackctl__operator__list_commands] )) ||
_stackctl__operator__list_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator list commands' commands "$@"
}
(( $+functions[_stackctl__release__help__list_commands] )) ||
_stackctl__release__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release help list commands' commands "$@"
}
(( $+functions[_stackctl__release__list_commands] )) ||
_stackctl__release__list_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release list commands' commands "$@"
}
(( $+functions[_stackctl__help__operator_commands] )) ||
_stackctl__help__operator_commands() {
    local commands; commands=(
'list:List available (or installed) operators' \
'describe:Print out detailed operator information' \
'install:Install one or more operators' \
'uninstall:Uninstall one or more operators' \
'installed:List installed operator (same as list -i)' \
    )
    _describe -t commands 'stackctl help operator commands' commands "$@"
}
(( $+functions[_stackctl__operator_commands] )) ||
_stackctl__operator_commands() {
    local commands; commands=(
'list:List available (or installed) operators' \
'describe:Print out detailed operator information' \
'install:Install one or more operators' \
'uninstall:Uninstall one or more operators' \
'installed:List installed operator (same as list -i)' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'stackctl operator commands' commands "$@"
}
(( $+functions[_stackctl__help__release_commands] )) ||
_stackctl__help__release_commands() {
    local commands; commands=(
'list:List available releases' \
'describe:Print out detailed release information' \
'install:Install a specific release' \
'uninstall:Uninstall a release' \
    )
    _describe -t commands 'stackctl help release commands' commands "$@"
}
(( $+functions[_stackctl__release_commands] )) ||
_stackctl__release_commands() {
    local commands; commands=(
'list:List available releases' \
'describe:Print out detailed release information' \
'install:Install a specific release' \
'uninstall:Uninstall a release' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'stackctl release commands' commands "$@"
}
(( $+functions[_stackctl__help__services_commands] )) ||
_stackctl__help__services_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help services commands' commands "$@"
}
(( $+functions[_stackctl__services_commands] )) ||
_stackctl__services_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl services commands' commands "$@"
}
(( $+functions[_stackctl__help__stack_commands] )) ||
_stackctl__help__stack_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help stack commands' commands "$@"
}
(( $+functions[_stackctl__stack_commands] )) ||
_stackctl__stack_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl stack commands' commands "$@"
}
(( $+functions[_stackctl__help__operator__uninstall_commands] )) ||
_stackctl__help__operator__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help operator uninstall commands' commands "$@"
}
(( $+functions[_stackctl__help__release__uninstall_commands] )) ||
_stackctl__help__release__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl help release uninstall commands' commands "$@"
}
(( $+functions[_stackctl__operator__help__uninstall_commands] )) ||
_stackctl__operator__help__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator help uninstall commands' commands "$@"
}
(( $+functions[_stackctl__operator__uninstall_commands] )) ||
_stackctl__operator__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl operator uninstall commands' commands "$@"
}
(( $+functions[_stackctl__release__help__uninstall_commands] )) ||
_stackctl__release__help__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release help uninstall commands' commands "$@"
}
(( $+functions[_stackctl__release__uninstall_commands] )) ||
_stackctl__release__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'stackctl release uninstall commands' commands "$@"
}

if [ "$funcstack[1]" = "_stackctl" ]; then
    _stackctl "$@"
else
    compdef _stackctl stackctl
fi
