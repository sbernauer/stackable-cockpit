.ie \n(.g .ds Aq \(aq
.el .ds Aq '
.TH stackctl 1  "stackctl 0.0.1" 
.SH NAME
stackctl
.SH SYNOPSIS
\fBstackctl\fR [\fB\-l\fR|\fB\-\-log\-level\fR] [\fB\-\-no\-cache\fR] [\fB\-\-offline\fR] [\fB\-n\fR|\fB\-\-namespace\fR] [\fB\-d\fR|\fB\-\-demo\-file\fR] [\fB\-s\fR|\fB\-\-stack\-file\fR] [\fB\-r\fR|\fB\-\-release\-file\fR] [\fB\-h\fR|\fB\-\-help\fR] [\fB\-V\fR|\fB\-\-version\fR] <\fIsubcommands\fR>
.SH DESCRIPTION
.SH OPTIONS
.TP
\fB\-l\fR, \fB\-\-log\-level\fR=\fILOG_LEVEL\fR
Log level this application uses
.TP
\fB\-\-no\-cache\fR
Do not cache the remote (default) demo, stack and release files

Cached files are saved at \*(Aq$XDG_CACHE_HOME/stackctl\*(Aq, which is usually
\*(Aq$HOME/.cache/stackctl\*(Aq when not explicitly set.
.TP
\fB\-\-offline\fR
Do not request any remote files via the network
.TP
\fB\-n\fR, \fB\-\-namespace\fR=\fINAMESPACE\fR [default: stackable]
Namespace in the cluster used to deploy the products and operators
.TP
\fB\-d\fR, \fB\-\-demo\-file\fR=\fIDEMO_FILES\fR
Provide one or more additional (custom) demo file(s)

Demos are loaded in the following order: Remote (default) demo file, custom
demo files provided via the \*(AqSTACKABLE_DEMO_FILES\*(Aq environment variable, and
lastly demo files provided via the \*(Aq\-d/\-\-demo\-file\*(Aq argument(s). If there are
demos with the same name, the last demo definition will be used.

Use "stackablectl \-d path/to/demos1.yaml \-d path/to/demos2.yaml [OPTIONS] <COMMAND>"
to provide multiple additional demo files.
.TP
\fB\-s\fR, \fB\-\-stack\-file\fR=\fISTACK_FILES\fR
Provide one or more additional (custom) stack file(s)
    
Stacks are loaded in the following order: Remote (default) stack file, custom
stack files provided via the \*(AqSTACKABLE_STACK_FILES\*(Aq environment variable, and
lastly demo files provided via the \*(Aq\-s/\-\-stack\-file\*(Aq argument(s). If there are
stacks with the same name, the last stack definition will be used.

Use "stackablectl \-s path/to/stacks1.yaml \-s path/to/stacks2.yaml [OPTIONS] <COMMAND>"
to provide multiple additional stack files.
.TP
\fB\-r\fR, \fB\-\-release\-file\fR=\fIRELEASE_FILE\fR
Provide one or more additional (custom) release file(s)
    
Releases are loaded in the following order: Remote (default) release file,
custom release files provided via the \*(AqSTACKABLE_RELEASE_FILES\*(Aq environment
variable, and lastly release files provided via the \*(Aq\-r/\-\-release\-file\*(Aq
argument(s). If there are releases with the same name, the last stack definition
will be used.

Use "stackablectl \-r path/to/realeases1.yaml \-r path/to/realeases2.yaml [OPTIONS] <COMMAND>"
to provide multiple additional stack files.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help (see a summary with \*(Aq\-h\*(Aq)
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version
.SH SUBCOMMANDS
.TP
stackctl\-operator(1)
Interact with single operator instead of the full platform
.TP
stackctl\-release(1)
Interact with all operators of the platform which are released together
.TP
stackctl\-stack(1)
Interact with stacks, which are ready\-to\-use product combinations
.TP
stackctl\-services(1)
Interact with deployed services of products
.TP
stackctl\-demo(1)
Interact with demos, which are end\-to\-end usage demonstrations of the Stackable data platform
.TP
stackctl\-completions(1)
Generate shell completions for this tool
.TP
stackctl\-cache(1)
Interact with locally cached files
.TP
stackctl\-help(1)
Print this message or the help of the given subcommand(s)
.SH VERSION
v0.0.1
